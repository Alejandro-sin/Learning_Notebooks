clean <-complete.cases(data_r)
na_ozone <- data_r[!clean,]["Ozone"]
class(na_ozone)
getwd()
setwd("C:/Logos/Root/Workbench/Curso Ciencia de Datos con R/Coursera/R-Workbench/Data")
data_r <- read.csv("hw1_data.csv")
data_r
head(data_r, 2)
tail(data_r, 2)
clean <-complete.cases(data_r)
lengt(data_r[!clean,]["Ozone"])
getwd()
setwd("C:/Logos/Root/Workbench/Curso Ciencia de Datos con R/Coursera/R-Workbench/Data")
data_r <- read.csv("hw1_data.csv")
data_r
head(data_r, 2)
tail(data_r, 2)
clean <-complete.cases(data_r)
length(data_r[!clean,]["Ozone"])
getwd()
setwd("C:/Logos/Root/Workbench/Curso Ciencia de Datos con R/Coursera/R-Workbench/Data")
data_r <- read.csv("hw1_data.csv")
data_r
head(data_r, 2)
tail(data_r, 2)
# Cuento los NA del dataset
data_r<- data.frame(data_r)
data_r
getwd()
setwd("C:/Logos/Root/Workbench/Curso Ciencia de Datos con R/Coursera/R-Workbench/Data")
data_r <- read.csv("hw1_data.csv")
data_r
head(data_r, 2)
tail(data_r, 2)
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_clean <- data_r[!na_val]
data_clean
mean()
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_clean <- data_r[!na_val]
data_clean
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_clean <- data_r
data_clean
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_clean <- data_r["Ozone"][!na_val]
data_clean
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_ozone <- data_r[$Ozone][!na_val]
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_ozone <- data_r[$Ozone][!na_val]
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_ozone <- data_r$Ozone
data_ozone
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_ozone <- c(data_r$Ozone()
data_ozone
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_ozone <- c(data_r$Ozone)
data_ozone
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_ozone <- c(data_r$Ozone,)
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_ozone <- c(data_r$Ozone,1)
data_ozone
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_ozone <- c(data_r$Ozone,1)
class(data_ozone)
# Cuento los NA del dataset
data_r<- data.frame(data_r)
na_val <- sum(is.na(data_r$Ozone))
na_val
# Saco el promedio
data_ozone <- c(data_r$Ozone,1)
data_ozone[!na_val]
# Cuento los NA del dataset
data_r<- data.frame(data_r)
ozone_clean <- is.na(data_r$Ozone)
# sumo limpio
na_val <- sum(ozone_clean)
na_val
# Saco el promedio
mean(ozone_clean)
mean
# Cuento los NA del dataset
data_r<- data.frame(data_r)
ozone_clean <- is.na(data_r$Ozone)
ozone_clean
# sumo limpio
na_val <- sum(ozone_clean)
na_val
# Saco el promedio
mean(ozone_clean)
mean
# Cuento los NA del dataset
data_r<- data.frame(data_r)
nas<- is.na(data_r$Ozone)
clean_data <- data_r[!nas]
# Cuento los NA del dataset
data_r<- data.frame(data_r)
nas<- is.na(data_r$Ozone)
clean_data <- data_r[!nas,]
clean_data
# sumo limpio
suma_na <- sum(ozone_clean)
suma_na
# Saco el promedio
mean(ozone_clean)
mean
# Cuento los NA del dataset
data_r<- data.frame(data_r)
nas<- is.na(data_r$Ozone)
clean_data <- data_r[!nas,]
clean_data
# sumo limpio
suma_na <- sum(ozone_clean)
suma_na
# Saco el promedio
mean(ozone_clean)
# Cuento los NA del dataset
data_r<- data.frame(data_r)
nas<- is.na(data_r$Ozone)
clean_data <- data_r[!nas,]
clean_data
# sumo limpio
suma_na <- sum(nas)
suma_na
# Saco el promedio
mean(ozone_clean)
# Cuento los NA del dataset
data_r<- data.frame(data_r)
nas<- is.na(data_r$Ozone)
clean_data <- data_r[!nas,]
clean_data
# sumo limpio
suma_na <- sum(nas)
suma_na
# Saco el promedio
mean(clean_data)
# Cuento los NA del dataset
data_r<- data.frame(data_r)
nas<- is.na(data_r$Ozone)
clean_data <- data_r[!nas,]
clean_data
# sumo limpio
suma_na <- sum(nas)
suma_na
# Saco el promedio
mean(clean_data$Ozone)
# Cuento los NA del dataset
data_r<- data.frame(data_r)
# Aquñi solo limpie la columna Ozone de Na
nas<- is.na(data_r$Ozone)
# Mi dataframe con ozono limpio
clean_data <- data_r[!nas,]
clean_data
# sumo limpio
suma_na <- sum(nas)
suma_na
# Saco el promedio
mean(clean_data$Ozone)
# Limpio el data set definitivamente.
data_clean <-  is.na(data_r)
data_clean
# Filtro para cuando el ozono es por encimade 31 y la temepratura por debajo de 90º y hago el promedio de Solar.R en este subconjunto.
# Creo el subconjunto.
# Cuento los NA del dataset
data_r<- data.frame(data_r)
# Aquñi solo limpie la columna Ozone de Na
nas<- is.na(data_r$Ozone)
# Mi dataframe con ozono limpio
clean_data <- data_r[!nas,]
clean_data
# sumo limpio
suma_na <- sum(nas)
suma_na
# Saco el promedio
mean(clean_data$Ozone)
# Limpio el data set definitivamente.
data_clean <- data_r[is.na(data_r)]
data_clean
# Filtro para cuando el ozono es por encimade 31 y la temepratura por debajo de 90º y hago el promedio de Solar.R en este subconjunto.
# Creo el subconjunto.
# Cuento los NA del dataset
data_r<- data.frame(data_r)
# Aquñi solo limpie la columna Ozone de Na
nas<- is.na(data_r$Ozone)
# Mi dataframe con ozono limpio
clean_data <- data_r[!nas,]
clean_data
# sumo limpio
suma_na <- sum(nas)
suma_na
# Saco el promedio
mean(clean_data$Ozone)
# Limpio el data set definitivamente.
data_clean <- data_r[!is.na(data_r)]
data_clean
# Filtro para cuando el ozono es por encimade 31 y la temepratura por debajo de 90º y hago el promedio de Solar.R en este subconjunto.
# Creo el subconjunto.
# Cuento los NA del dataset
data_r<- data.frame(data_r)
# Aquñi solo limpie la columna Ozone de Na
nas<- is.na(data_r$Ozone)
# Mi dataframe con ozono limpio
clean_data <- data_r[!nas,]
clean_data
# sumo limpio
suma_na <- sum(nas)
suma_na
# Saco el promedio
mean(clean_data$Ozone)
# Limpio el data set definitivamente.
data_clean <- data_r[!is.na(data_r)]
data_clean
# Filtro para cuando el ozono es por encimade 31 y la temepratura por debajo de 90º y hago el promedio de Solar.R en este subconjunto.
# Creo el subconjunto.
data_clean[ozone>31]
# Filtro para cuando el ozono es por encimade 31 y la temepratura por debajo de 90º y hago el promedio de Solar.R en este subconjunto.
# Creo el subconjunto.
data_clean[ozone>31]
# Filtro para cuando el ozono es por encimade 31 y la temepratura por debajo de 90º y hago el promedio de Solar.R en este subconjunto.
# Creo el subconjunto.
data_clean[Ozone>31]
# Filtro para cuando el ozono es por encimade 31 y la temepratura por debajo de 90º y hago el promedio de Solar.R en este subconjunto.
# Creo el subconjunto.
data_clean[data_clean$Ozone >31]
# Filtro para cuando el ozono es por encimade 31 y la temepratura por debajo de 90º y hago el promedio de Solar.R en este subconjunto.
# Creo el subconjunto.
filter(data_r, Ozone>31)
# Filtro para cuando el ozono es por encimade 31 y la temepratura por debajo de 90º y hago el promedio de Solar.R en este subconjunto.
# Creo el subconjunto.
filter(data_r, ozone>31)
clear
clean
install.packages("swirl")
source('~/.active-rstudio-document', echo=TRUE)
ls
ls()
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
install_from_swirl("R Programming")
source('~/.active-rstudio-document', echo=TRUE)
swirl()
1
swirl()
5+7
knitr::opts_chunk$set(echo = TRUE)
# Para leer datos de un archivo en una carpeta se usa la ruta absoluta.
head(read.csv("C:/Logos/Root/Workbench/Curso Ciencia de Datos con R/Coursera/R-Workbench/Data/EdStatsData.csv"))
# Esta línea lee todas las apariciones por comodidad  se usan funciones de muestreo.
library(swirl)
swirl()
x<-5+7
x
y<-x-3
y
z <- c(1.1, 9, 3.14)
z
?c
z
c(z,555)
c(z,555, z)
z*z+100
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4)+c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_sqrt
my_div
swirl()
getwd()
ls()
x<-9
ls()
dir()
list.files
?list.files
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists()
file.exists("mytest.R")
file.info("mytest.R")
file.info("mytest.R")$mode ---
size
file.info("mytest.R")$mode size
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2",file.path("testdir"))
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
setwd(old.dir)
library(swirl)
1:2
1:20
pi:10
15:1
?`:`
seq(1:20)
args(list.files)
list.files()
SEQ(1:20)
seq(1:20)
seq(1,20)
seq(0,10, by=0.5)
seq(1:20)
# Quiero crear una secuencia que incremente de 2 en dos.
seq(0,10, by=2)
# Ahora quiero  una cantidad de números entre dos números
my_seq<- seq(5,10, length=30)
my_seq<- seq(5,10, length=30)
length(my_seq)
my_seq<- c(1:length(my_seq))
my_seq<- 1:length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times =40)
rep(0,times =40)
rep(c(0,1,2), times=10)
rep(c(0,1,2) each =10)
rep(c(0,1,2) , each =10)
num_vect <- c(0.5, 55, -10,,6)
num_vect <- c(0.5, 55, -10,6)
tf <- num_vect <1
tf
num_vect <=6
num_vect >=6
"my_char"
my_char <-c("My", "name", "is")
my_char
paste(my_char)
paste(my_char, collapse = " ")
my_name <- c(my_char, "Alejandro")
knitr::opts_chunk$set(echo = TRUE)
# Para acceder al directorio de trabajo actual usamos la función getwd()
getwd()
# Para acceder a la lsita de elementos en mi directorio
dir()
# Para establecer un directorio de trabajo
setwd("C:/Logos/Root/Workbench/Curso Ciencia de Datos con R/Coursera/R-Workbench/Data")
# Para crear carpetas
dir.create("nombre carpeta nueva")
#Creación de archivos
file.create("CualquierFormato.txt")
# Para leer datos de un archivo en una carpeta se usa la ruta absoluta.
head(read.csv("C:/Logos/Root/Workbench/Curso Ciencia de Datos con R/Coursera/R-Workbench/Data/EdStatsData.csv"))
my_name
paste(my_name, collapse=" ")
paste("Hello,"world", sep=" ")
paste("Hello","world", sep=" ")
paste("Hello","world!", sep=" ")
# Pego dos vectores de tipo diferente
paste(1:3, c("X", "Y", "Z"), sep = "")
# Ejemplo usadno la variable nativa LETTERS para las 26 letras dle alfabeto. y
# Revisando el reciclaje de vectores.
paste(LETTERS, 1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y <-rnorm(1000)
z <-rep(NA,1000)
my_data <- sample(c(y,z),100)
y <-rnorm(1000)
z <-rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na<- is.na(my_data)
y <-rnorm(1000)
z <-rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na<- is.na(my_data)
my_na
y <-rnorm(1000)
z <-rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na<- is.na(my_data)
my_na
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
infinity-infinity
d
s32
z <- Inf-Inf
Inf-Inf
x
x[1:10]
# Quiero crear un juego de datos rapdio.
a <- c(rnorm(100))
b <- rep(NA, a)
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)& x >0]
x <- x[3]
x <- c(3,5,7)
x[c(3,5,7)]
x[0]
x[300000000]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf =NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- :!20
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matri()
?matrix()
?matrix()
matrix()
matrix(my_vector)
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
# Uso cbinds para combinar columnas
cbinds(patients,my_matrix)
# Uso cbinds para combinar columnas
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <-c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
